Описание задания.

 1 уровень сложности:

 1. Написать рекурсивную функцию вычисления факториала factorial(n) - произведения всех чисел до n включительно

 2.
Оценить временную сложность фрагментов алгоритмов:
a)
for (int i = 0; i < n; ++i) {
  for (int j = 1; j < m; ++j) {
    a[i][j]++;
  }
}
 Двойной вложенный цикл с постоянной операцией a[i][j]++. Временная сложность: O(n * m), где n и m - размеры матрицы.
 Ответ :    a) O(n * m)

b)
for (int i = 0; i < n-1; ++i) {
  for (int j = 0; j < n-i; ++j) {
    a[i][j]++;
  }
}
 Двойной вложенный цикл, внутренний цикл зависит от n и текущего значения i, выполняется n - i раз.
 Ответ:     Временная сложность: O(n^2).

c)
for (int i = 0; i < n; ++i) {
  for (int j = 1; j < n; j *= 3) {
    a[i][j]++;
  }
}
 Двойной вложенный цикл, внутренний цикл зависит от n и увеличивается в 3 раза на каждой итерации.
 Это арифметическая прогрессия, и внутренний цикл выполнится O(log3(n)) раз.
 Ответ :    Временная сложность: O(n * log3(n)).

d)
for (int i = 0; i < 1000; ++i) {
  for (int j = 1; j < n; ++j) {
    ++count;
  }
}
 Двойной вложенный цикл с постоянной операцией ++count.
 Ответ : Временная сложность: O(n).

e)
for (int i = 0; i < n; ++i) {
  for (int j = 0; j < n/3; ++j) {
    matrx[i][i]++;
  }
}
 Двойной вложенный цикл, внутренний цикл зависит от n и выполняется n/3 раз.
 Ответ : Временная сложность: O(n^2/3).