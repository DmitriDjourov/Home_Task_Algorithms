Оценка алгоритмической сложности каждого метода в классе `CustomDynamicArray`:

1. `add(int element)`:
   - В среднем случае, сложность этого метода равна O(1), так как просто добавляется элемент в массив. Однако,
     если массив переполняется и необходимо увеличивать его размер, сложность может быть O(n),
     где n - текущий размер массива.

2. `addAt(int index, int element)`:
   - В среднем случае, сложность этого метода также равна O(n), где n - текущий размер массива. Это потому,
     можно вставить элемент в середину массива, что потребует перемещения всех элементов справа от вставленного
     элемента.

3. `remove()`:
   - Сложность метода `remove()` в среднем случае также O(1), так как он удаляет последний элемент из массива.

4. `removeAt(int index)`:
   - Сложность метода `removeAt(int index)` - O(n), так как при удалении элемента из середины массива, нужно будет
     переместить все элементы справа от удаленного элемента.

5. `shrinkSize()`:
   - Сложность `shrinkSize()` - O(n), где n - текущий размер массива. Этот метод создает новый массив и копирует в него
     все существующие элементы.

6. `set(int index, int newData)`:
   - Сложность метода `set(int index, int newData)` - O(1), так как просто присваивается новое значение элементу по
     индексу.

7. `get(int index)`:
   - Сложность метода `get(int index)` - O(1), так как он возвращает элемент по индексу, что требует только одного
     обращения к массиву.

8. `clear()`:
   - Сложность метода `clear()` - O(n), так как перебираются все элементы массива и устанавливаются в 0.

9. `contains(int newData)`:
   - Сложность метода `contains(int newData)` - O(n), так как перебираются все элементы массива в поиске заданного
     значения.

10. `isEmpty()`:
    - Сложность метода `isEmpty()` - O(1), так как он проверяет только значение `count`.

11. Итератор (ваш метод `iterator()`):
    - Создание итератора - O(1).
    - `hasNext()` - O(1), так как он просто проверяет индекс.
    - `next()` - O(1), так как он возвращает следующий элемент.

    Вывод :
    Большинство операций имеют сложность O(1), но методы `addAt(int index, int element)`, `removeAt(int index)`,
    `shrinkSize()`, `contains(int newData)`, и `clear()` могут иметь более высокую сложность в зависимости от размера
    массива.